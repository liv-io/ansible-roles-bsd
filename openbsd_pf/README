INFORMATION

Name   : openbsd_pf
Type   : Ansible role

Authors: liv community
License: Simplified BSD License

DESCRIPTION

PF (Packet Filter) is a BSD licensed stateful packet filter, a central piece of
software for firewalling. PF is developed on OpenBSD, but has been ported to
many other operating systems including FreeBSD, NetBSD, DragonFly BSD and
Mac OS X.

For more information on the usage and available configuration options,
consult the following sections.

USAGE

INSTALL
  - hosts: all
    roles:
      - role: openbsd_pf
    vars:
      openbsd_pf_state: 'install'

ENABLE
  - hosts: all
    roles:
      - role: openbsd_pf
    vars:
      openbsd_pf_state: 'enable'

DISABLE
  - hosts: all
    roles:
      - role: openbsd_pf
    vars:
     openbsd_pf_state: 'disable'

REMOVE
  - hosts: all
    roles:
      - role: openbsd_pf
    vars:
      openbsd_pf_state: 'remove'

INACTIVE
  - hosts: all
    roles:
      - role: openbsd_pf
    vars:
      openbsd_pf_state: 'inactive'

CONFIG
  vars:
    openbsd_pf_filters_all:
      - {action: 'pass', direction: 'in', quick: 'true', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'echoreq', state: '$default_udp', comment: 'ICMP Echo Request: From any'}
      - {action: 'pass', direction: 'in', quick: 'true', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'unreach', state: '$default_udp', comment: 'ICMP Destination Unreachable: From any'}
      - {action: 'pass', direction: 'in', quick: 'true', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'squench', state: '$default_udp', comment: 'ICMP Source Quench: From any'}
      - {action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'192.168.0.0/16', '172.16.0.0/12', '10.0.0.0/8'}, destinations: {'any'}, ports: {'ssh'}, queue: 'ssh', state: '$default_tcp', comment: 'SSH: From private address space (RFC 1918)'}
      - {action: 'pass', direction: 'out', quick: 'true', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'unreach', state: '$default_udp', comment: 'ICMP Destination Unreachable: To any'}
      - {action: 'pass', direction: 'out', quick: 'true', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'squench', state: '$default_udp', comment: 'ICMP Source Quench: To any'}
      - {action: 'pass', direction: 'out', quick: 'true', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'echoreq', state: '$default_udp', comment: 'ICMP Echo Request: To any'}
      - {action: 'pass', direction: 'out', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'10.11.1.11', '10.21.1.11'}, ports: {'domain'}, state: '$default_tcp', comment: 'DNS: To dns servers'}
      - {action: 'pass', direction: 'out', version: 'inet', protocols: {'udp'}, sources: {'any'}, destinations: {'10.11.1.11', '10.21.1.11'}, ports: {'domain'}, state: '$default_udp', comment: 'DNS: To dns servers'}
      - {action: 'pass', direction: 'out', version: 'inet', protocols: {'udp'}, sources: {'any'}, destinations: {'10.2.1.11', '10.2.1.12', '10.2.1.13', '10.2.1.14'}, ports: {'ntp'}, state: '$default_udp', comment: 'NTP: To ntp servers'}
      - {action: 'pass', direction: 'out', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'10.2.1.15'}, ports: {'http', 'https'} , state: '$default_tcp', comment: 'HTTP(S): To package repository'}

    openbsd_pf_filters_group:
      - {action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'http', 'https'}, queue: 'http', state: '$default_tcp', comment: 'HTTP(S): From any'}
      - {action: 'pass', direction: 'in', version: 'inet6', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'http', 'https'}, queue: 'http', state: '$default_tcp', comment: 'HTTP(S): From any'}

    openbsd_pf_filters_host:
      - {action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'smtp', 'submission', 'imaps'}, state: '$default_tcp', comment: 'MAIL: From any'}
      - {action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'http', 'https'}, queue: 'http', state: '$default_tcp', comment: 'HTTP(S): From any'}
      - {action: 'pass', direction: 'out', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'smtp', 'submission'}, state: '$default_tcp', comment: 'MAIL: To any'}

    openbsd_pf_queues_all:
      - {name: 'root_data', interface: 'vio0', bandwidth: '1G'}
      - {name: 'ssh', parent: 'root_data', bandwidth: '5M min 1M max 100M'}
      - {name: 'http', parent: 'root_data', bandwidth: '10M max 400M'}
      - {name: 'other', parent: 'root_data', bandwidth: '50M max 500M', default: 'true'}

PARAMETERS

ROLE
  openbsd_pf_state
    Description: Control the state of the role.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'enable'
    Options    :
      Install : 'true' | 'yes' | 'install'
      Enable  : 'start' | 'on' | 'enable'
      Disable : 'stop' | 'off' | 'disable'
      Remove  : 'false' | 'no' | 'remove'
      Inactive: 'quiesce' | 'inactive'

  openbsd_pf_filters_all
    Description: Define the 'openbsd_pf_filters_all' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : [{action: 'pass', direction: 'in', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'echoreq', state: '$default_udp', comment: 'ICMP Echo Request: From any'},
                  {action: 'pass', direction: 'in', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'unreach', state: '$default_udp', comment: 'ICMP Destination Unreachable: From any'},
                  {action: 'pass', direction: 'in', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'squench', state: '$default_udp', comment: 'ICMP Source Quench: From any'},
                  {action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'192.168.0.0/16', '172.16.0.0/12', '10.0.0.0/8'}, destinations: {'any'}, ports: {'ssh'}, queue: 'ssh', state: '$default_tcp', comment: 'SSH: From private address space (RFC 1918)'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'unreach', state: '$default_udp', comment: 'ICMP Destination Unreachable: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'squench', state: '$default_udp', comment: 'ICMP Source Quench: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'echoreq', state: '$default_udp', comment: 'ICMP Echo Request: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'domain'}, state: '$default_tcp', comment: 'DNS: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'udp'}, sources: {'any'}, destinations: {'any'}, ports: {'domain'}, state: '$default_udp', comment: 'DNS: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'udp'}, sources: {'any'}, destinations: {'any'}, ports: {'ntp'}, state: '$default_udp', comment: 'NTP: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'http', 'https'} , state: '$default_tcp', comment: 'HTTP(S): To any'}]
    Options    :
      Examples: [{action: 'pass', direction: 'in', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'echoreq', state: '$default_udp', comment: 'ICMP Echo Request: From any'},
                  {action: 'pass', direction: 'in', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'unreach', state: '$default_udp', comment: 'ICMP Destination Unreachable: From any'},
                  {action: 'pass', direction: 'in', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'squench', state: '$default_udp', comment: 'ICMP Source Quench: From any'},
                  {action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'192.168.0.0/16', '172.16.0.0/12', '10.0.0.0/8'}, destinations: {'any'}, ports: {'ssh'}, queue: 'ssh', state: '$default_tcp', comment: 'SSH: From private address space (RFC 1918)'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'unreach', state: '$default_udp', comment: 'ICMP Destination Unreachable: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'squench', state: '$default_udp', comment: 'ICMP Source Quench: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'icmp'}, type: 'icmp-inet', code: 'echoreq', state: '$default_udp', comment: 'ICMP Echo Request: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'domain'}, state: '$default_tcp', comment: 'DNS: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'udp'}, sources: {'any'}, destinations: {'any'}, ports: {'domain'}, state: '$default_udp', comment: 'DNS: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'udp'}, sources: {'any'}, destinations: {'any'}, ports: {'ntp'}, state: '$default_udp', comment: 'NTP: To any'},
                  {action: 'pass', direction: 'out', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'http', 'https'} , state: '$default_tcp', comment: 'HTTP(S): To any'}]
      None    : []

  openbsd_pf_filters_group
    Description: Define the 'openbsd_pf_filters_group' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'http', 'https'}, queue: 'http', state: '$default_tcp', comment: 'HTTP(S): From any'},
                 {action: 'pass', direction: 'in', version: 'inet6', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'http', 'https'}, queue: 'http', state: '$default_tcp', comment: 'HTTP(S): From any'}]
      None    : []

  openbsd_pf_filters_host
    Description: Define the 'openbsd_pf_filters_host' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'smtp', 'submission', 'imaps'}, state: '$default_tcp', comment: 'MAIL: From any'},
                 {action: 'pass', direction: 'in', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'http', 'https'}, queue: 'http', state: '$default_tcp', comment: 'HTTP(S): From any'},
                 {action: 'pass', direction: 'out', version: 'inet', protocols: {'tcp'}, sources: {'any'}, destinations: {'any'}, ports: {'smtp', 'submission'}, state: '$default_tcp', comment: 'MAIL: To any'}]
      None    : []

  openbsd_pf_filters_policies
    Description: Define the 'openbsd_pf_filters_policies' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : [{action: 'block', direction: 'in', log: 'true', comment: 'Default incoming policy'},
                  {action: 'block', direction: 'out', log: 'false', comment: 'Default outgoing policy'}]
    Options    :
      Examples: [{action: 'block', direction: 'in', log: 'true', comment: 'Default incoming policy'},
                 {action: 'pass', direction: 'out', log: 'true', comment: 'Default outgoing policy'}]
      None    : []

  openbsd_pf_macros_all
    Description: Define the 'openbsd_pf_macros_all' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'h_ns01', value: '10.11.1.11', comment: 'dns server 01'},
                 {name: 'h_ns02', value: '10.21.1.11', comment: 'dns server 02'},
                 {name: 'g_ns', value: '{ $h_ns01, $h_ns02 }', comment: 'dns servers'},
                 {name: 'h_ntp01', value: '10.2.1.11', comment: 'ntp server 01'},
                 {name: 'h_ntp02', value: '10.2.1.12', comment: 'ntp server 02'},
                 {name: 'h_ntp03', value: '10.2.1.13', comment: 'ntp server 03'},
                 {name: 'h_ntp04', value: '10.2.1.14', comment: 'ntp server 04'},
                 {name: 'g_ntp', value: '{ $h_ntp01, $h_ntp02, $h_ntp03, $h_ntp04 }', comment: 'ntp servers'}]
      None    : []

  openbsd_pf_macros_group
    Description: Define the 'openbsd_pf_macros_group' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'h_mirror', value: '10.2.1.15', comment: 'package repository'},
                 {name: 'h_fproxy', value: '10.2.1.16', comment: 'forward proxy'},
                 {name: 'h_rproxy', value: '10.2.1.17', comment: 'reverse proxy'}]
      None    : []

  openbsd_pf_macros_host
    Description: Define the 'openbsd_pf_macros_host' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'h_mirror', value: '10.2.1.15', comment: 'package repository'},
                 {name: 'h_fproxy', value: '10.2.1.16', comment: 'forward proxy'},
                 {name: 'h_rproxy', value: '10.2.1.17', comment: 'reverse proxy'}]
      None    : []

  openbsd_pf_macros_state_all
    Description: Define the 'openbsd_pf_macros_state_all' option.
                 The flags 'S/SA' are safe when using scrubbing. Use the flags
                 'S/SFRA' when scrubbing is disabled.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : [{name: 'default_tcp', options: {'flags S/SA', 'modulate state'}, comment: 'Default TCP state'},
                  {name: 'default_udp', options: {'keep state'}, comment: 'Default UDP state'}]
    Options    :
      Examples: [{name: 'default_tcp', options: {'flags S/SA', 'modulate state'}, comment: 'Default TCP state'},
                 {name: 'default_udp', options: {'keep state'}, comment: 'Default UDP state'}]
      None    : []

  openbsd_pf_macros_state_group
    Description: Define the 'openbsd_pf_macros_state_group' option.
                 The flags 'S/SA' are safe when using scrubbing. Use the flags
                 'S/SFRA' when scrubbing is disabled.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'default_tcp', options: {'flags S/SA', 'modulate state'}, comment: 'Default TCP state'},
                 {name: 'default_udp', options: {'keep state'}, comment: 'Default UDP state'}]
      None    : []

  openbsd_pf_macros_state_host
    Description: Define the 'openbsd_pf_macros_state_host' option.
                 The flags 'S/SA' are safe when using scrubbing. Use the flags
                 'S/SFRA' when scrubbing is disabled.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'default_tcp', options: {'flags S/SA', 'modulate state'}, comment: 'Default TCP state'},
                 {name: 'default_udp', options: {'keep state'}, comment: 'Default UDP state'}]
      None    : []

  openbsd_pf_normalization_scrub
    Description: Define the 'openbsd_pf_normalization_scrub' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : [{action: 'match', direction: 'in', sources: {'any'}, destinations: {'any'}, options: {'reassemble tcp'}, comment: 'Scrub: Incoming traffic normalization'},
                  {action: 'match', direction: 'out', sources: {'any'}, destinations: {'any'}, options: {'random-id', 'reassemble tcp'}, comment: 'Scrub: Outgoing traffic normalization'}]
    Options    :
      Examples: [{action: 'match', direction: 'in', sources: {'any'}, destinations: {'any'}, options: {'reassemble tcp'}, comment: 'Scrub: Incoming traffic normalization'},
                 {action: 'match', direction: 'out', sources: {'any'}, destinations: {'any'}, options: {'random-id', 'reassemble tcp'}, comment: 'Scrub: Outgoing traffic normalization'}]
      None    : []

  openbsd_pf_options_block_policy
    Description: Control the 'openbsd_pf_options_block_policy' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'drop'
    Options    :
      Return: 'return'
      Block : 'block'
      Drop  : 'drop'

  openbsd_pf_options_debug
    Description: Control the 'openbsd_pf_options_debug' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'crit'
    Options    :
      Emergency    : 'emerg'
      Alert        : 'alert'
      Critical     : 'crit'
      Error        : 'err'
      Warning      : 'warning'
      Notice       : 'notice'
      Informational: 'info'
      Debug        : 'debug'

  openbsd_pf_options_fingerprints
    Description: Define the 'openbsd_pf_options_fingerprints' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : String
    Default    : '/etc/pf.os'
    Options    :
      Examples: '/etc/pf.os' | '/etc/pf.os-fingerprints'

  openbsd_pf_options_hostid
    Description: Define the 'openbsd_pf_options_hostid' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : String
    Default    : 'false'
    Options    :
      Examples: '1' | '2' | '3'
      Disable : 'false' | 'no' | 'disable'

  openbsd_pf_options_limits
    Description: Define the 'openbsd_pf_options_limits' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'states', value: '20000', comment: 'Limit: Maximum entries for state table'},
                 {name: 'frags', value: '20000', comment: 'Limit: Maximum entries for fragment reassembly'},
                 {name: 'src-nodes', value: '2000', comment: 'Limit: Maximum entries for tracking source IP addresses'},
                 {name: 'tables', value: '1000', comment: 'Limit: Maximum of tables'},
                 {name: 'table-entries', value: '100000', comment: 'Limit: Overall maximum of addresses'}]
      None    : []

  openbsd_pf_options_loginterface
    Description: Define the 'openbsd_pf_options_loginterface' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : String
    Default    : 'false'
    Options    :
      Examples: 'em0' | 'ed1' | 'wlan2'
      None    : 'false' | 'no' | 'disable'

  openbsd_pf_options_optimization
    Description: Control the 'openbsd_pf_options_optimization' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'normal'
    Options    :
      Normal      : 'normal'
      High-Latency: 'high-latency'
      Satellite   : 'satellite'
      Aggressive  : 'aggressive'
      Conservative: 'conservative'

  openbsd_pf_options_reassemble
    Description: Control the 'openbsd_pf_options_reassemble' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'true'
    Options    :
      Enable : 'true' | 'yes' | 'enable'
      Disable: 'false' | 'no' | 'disable'

  openbsd_pf_options_ruleset_optimization
    Description: Control the 'openbsd_pf_options_ruleset_optimization' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'basic'
    Options    :
      Basic  : 'basic'
      Profile: 'profile'
      None   : 'false' | 'no' | 'disable'

  openbsd_pf_options_skip
    Description: Define the 'openbsd_pf_options_skip' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array
    Default    : ['lo']
    Options    :
      Examples: ['lo'] | ['lo', 'em0']
      None    : []

  openbsd_pf_options_state_defaults
    Description: Define the 'openbsd_pf_options_state_defaults' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array
    Default    : []
    Options    :
      Examples: ['pflow', 'no-sync']
      None    : []

  openbsd_pf_options_state_policy
    Description: Control the 'openbsd_pf_options_state_policy' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'floating'
    Options    :
      Floating: 'floating'
      If-Bound: 'if-bound'

  openbsd_pf_options_timeouts
    Description: Define the 'openbsd_pf_options_timeouts' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'tcp.first', value: '120', comment: 'State after the first packet'},
                 {name: 'tcp.established', value: '86400', comment: 'Fully established state'}] |
                [{name: 'adaptive.start', value: '6000', comment: 'Adaptive scaling start'},
                 {name: 'adaptive.end', value: '12000', comment: 'Adaptive scaling end'}]
      None    : []

  openbsd_pf_pf_dir_name
    Description: Define the 'openbsd_pf_pf_dir_name' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : String
    Default    : 'pf'
    Options    :
      Examples: 'pf' | 'pf.d' | 'pf.conf.d'

  openbsd_pf_queues_all
    Description: Define the 'openbsd_pf_queues_all' option.
    Implemented: 1.3.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'root_data', interface: 'vio0', bandwidth: '1G'},
                 {name: 'ssh', parent: 'root_data', bandwidth: '5M min 1M max 100M'},
                 {name: 'http', parent: 'root_data', bandwidth: '10M max 400M'},
                 {name: 'other', parent: 'root_data', bandwidth: '50M max 500M', default: 'true'}]
      None    : []

  openbsd_pf_queues_group
    Description: Define the 'openbsd_pf_queues_group' option.
    Implemented: 1.3.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'root_data', interface: 'vio0', bandwidth: '1G'},
                 {name: 'ssh', parent: 'root_data', bandwidth: '5M min 1M max 100M'},
                 {name: 'http', parent: 'root_data', bandwidth: '10M max 400M'},
                 {name: 'other', parent: 'root_data', bandwidth: '50M max 500M', default: 'true'}]
      None    : []

  openbsd_pf_queues_host
    Description: Define the 'openbsd_pf_queues_host' option.
    Implemented: 1.3.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'root_data', interface: 'vio0', bandwidth: '1G'},
                 {name: 'ssh', parent: 'root_data', bandwidth: '5M min 1M max 100M'},
                 {name: 'http', parent: 'root_data', bandwidth: '10M max 400M'},
                 {name: 'other', parent: 'root_data', bandwidth: '50M max 500M', default: 'true'}]
      None    : []

  openbsd_pf_tables_all
    Description: Define the 'openbsd_pf_tables_all' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : [{name: 'rfc1918', attribute: 'const', value: {'10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16'}, comment: 'Table: private address space (RFC 1918)'}]
    Options    :
      Examples: [{name: 'rfc1918', attribute: 'const', value: {'10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16'}, comment: 'Table: private address space (RFC 1918)'}]
      None    : []

  openbsd_pf_tables_group
    Description: Define the 'openbsd_pf_tables_group' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'rfc1918', attribute: 'const', value: {'10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16'}, comment: 'Table: private address space (RFC 1918)'}]
      None    : []

  openbsd_pf_tables_host
    Description: Define the 'openbsd_pf_tables_host' option.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'rfc1918', attribute: 'const', value: {'10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16'}, comment: 'Table: private address space (RFC 1918)'}]
      None    : []

CONFLICTS

ROLES

DEPENDENCIES

PACKAGES

ROLES

PARAMETERS

REQUIREMENTS

CONTROL NODE
  Ansible
    Version: >= 2.8.0

MANAGED NODE
  Python
    Version: >= 2.7.0

SUPPORT

OPERATING SYSTEMS
  FreeBSD
    Version: 12.2-*
      Status: Unsupported

  OpenBSD
    Version: 6.9
      Status: Stable
