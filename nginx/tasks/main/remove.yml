---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - nginx

- name: info nginx
  shell: "{{command_cmd_info_nginx}}"
  register: register_info_nginx
  failed_when: (register_info_nginx.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - nginx

- name: disable nginx
  command: "{{command_cmd_disable_nginx}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_info_nginx.rc == 0)
  tags:
    - nginx

- name: stop nginx
  command: "{{command_cmd_stop_nginx}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_info_nginx.rc == 0)
  tags:
    - nginx

- name: remove package nginx
  package:
    state: 'absent'
    name: "{{package_name_nginx}}"
  tags:
    - nginx

- name: remove file nginx.cfg
  file:
    state: 'absent'
    path: "{{file_dst_nginx_cfg}}"
  notify: reload service monit
  tags:
    - nginx

- name: line remove nginx_enable
  lineinfile:
    state: 'absent'
    line: "{{file_line_nginx_enable}}=\"NO\" # Ansible: Remove nginx"
    regexp: "^{{file_line_nginx_enable}}="
    dest: "{{file_dst_nginx_enable}}"
    create: 'yes'
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - nginx

- name: remove file nginx.conf
  file:
    state: 'absent'
    path: "{{file_dst_nginx_conf}}"
  tags:
    - nginx

- name: remove file dhparam.pem
  file:
    state: 'absent'
    path: "{{file_dst_dhparam_pem}}"
  tags:
    - nginx

- name: remove file log.dir
  file:
    state: 'absent'
    path: "{{file_dst_log_dir}}"
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - nginx

- name: remove file vhosts.d
  file:
    state: 'absent'
    path: "{{file_dst_vhosts_d}}"
  tags:
    - nginx
