---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - suricata

- name: install package suricata
  package:
    state: 'present'
    name: "{{package_name_suricata}}"
  tags:
    - suricata

- name: create file eve.json
  copy:
    content: ''
    force: 'no'
    dest: "{{file_dst_eve_json}}"
    mode: "{{file_mode_eve_json}}"
    owner: "{{file_owner_eve_json}}"
    group: "{{file_group_eve_json}}"
  tags:
    - suricata

- name: create file fast.log
  copy:
    content: ''
    force: 'no'
    dest: "{{file_dst_fast_log}}"
    mode: "{{file_mode_fast_log}}"
    owner: "{{file_owner_fast_log}}"
    group: "{{file_group_fast_log}}"
  tags:
    - suricata

- name: create file stats.log
  copy:
    content: ''
    force: 'no'
    dest: "{{file_dst_stats_log}}"
    mode: "{{file_mode_stats_log}}"
    owner: "{{file_owner_stats_log}}"
    group: "{{file_group_stats_log}}"
  tags:
    - suricata

- name: stat file suricata.rules
  stat:
    path: "{{file_dst_suricata_rules}}"
  register: register_suricata_rules
  tags:
    - suricata

- name: config line eve.json.newsyslog
  lineinfile:
    state: 'present'
    line: "{{file_line_eve_json_newsyslog}}"
    regexp: "{{file_regexp_eve_json_newsyslog}}"
    dest: "{{file_dst_eve_json_newsyslog}}"
    create: 'yes'
  tags:
    - suricata

- name: config line fast.log.newsyslog
  lineinfile:
    state: 'present'
    line: "{{file_line_fast_log_newsyslog}}"
    regexp: "{{file_regexp_fast_log_newsyslog}}"
    dest: "{{file_dst_fast_log_newsyslog}}"
    create: 'yes'
  tags:
    - suricata

- name: config line stats.log.newsyslog
  lineinfile:
    state: 'present'
    line: "{{file_line_stats_log_newsyslog}}"
    regexp: "{{file_regexp_stats_log_newsyslog}}"
    dest: "{{file_dst_stats_log_newsyslog}}"
    create: 'yes'
  tags:
    - suricata

- name: stat file monit.d
  stat:
    path: "{{file_dst_monit_d}}"
  register: register_monit_d
  when: (suricata_monitor_monit_state is match('true|yes|enable'))
  tags:
    - suricata

- name: create file monit.d
  file:
    state: 'directory'
    path: "{{file_dst_monit_d}}"
    mode: "{{file_mode_monit_d}}"
    owner: "{{file_owner_monit_d}}"
    group: "{{file_group_monit_d}}"
  when: (suricata_monitor_monit_state is match('true|yes|enable')) and (register_monit_d.stat.exists == False)
  tags:
    - suricata

- name: check service monit
  shell: "{{command_cmd_check_service_monit}}"
  register: register_check_service_monit
  changed_when: (register_check_service_monit.rc > 2)
  failed_when: (register_check_service_monit.rc > 2)
  check_mode: 'no'
  when: (suricata_monitor_monit_state is match('true|yes|enable'))
  tags:
    - suricata

- name: update suricata
  shell: "{{command_cmd_update_suricata}}"
  check_mode: 'no'
  when: (register_suricata_rules.stat.exists == False)
  tags:
    - suricata
