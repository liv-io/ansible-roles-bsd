---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - suricata

- name: create file config
  template:
    src: "{{file_src_config}}"
    dest: "{{file_dst_config}}/{{item.name}}.rules"
    mode: "{{file_mode_config}}"
    owner: "{{file_owner_config}}"
    group: "{{file_group_config}}"
  loop: "{{suricata_config}}"
  notify:
    - update suricata
    - reload service suricata
  when: not (item.state|default('true') is match('false|no|remove'))
  tags:
    - suricata

- name: remove file config
  file:
    state: 'absent'
    path: "{{file_dst_config}}/{{item.name}}.rules"
  loop: "{{suricata_config}}"
  notify: reload service suricata
  when: (item.state|default('true') is match('false|no|remove'))
  tags:
    - suricata

- name: list enabled ruleset
  shell: "{{command_cmd_list_enabled_rulesets}} | grep '{{item.name}}'"
  register: register_list_enabled_rulesets
  changed_when: (register_list_enabled_rulesets.rc > 1)
  failed_when: (register_list_enabled_rulesets.rc > 1)
  check_mode: 'no'
  loop: "{{suricata_ruleset}}"
  tags:
    - suricata

- name: install ruleset
  shell: "{{command_cmd_install_ruleset}} {{item.item.name}} {{item.item.link}}"
  check_mode: 'no'
  loop: "{{register_list_enabled_rulesets.results}}"
  notify:
    - update suricata
    - reload service suricata
  when: (item.rc != 0) and (item.item.state|default('true') is match('install'))
  tags:
    - suricata

- name: enable ruleset
  shell: "{{command_cmd_enable_ruleset}} {{item.item.name}}"
  check_mode: 'no'
  loop: "{{register_list_enabled_rulesets.results}}"
  notify:
    - update suricata
    - reload service suricata
  when: (item.rc != 0) and not (item.item.state|default('true') is match('false|no|remove|disable|install'))
  tags:
    - suricata

- name: remove ruleset
  shell: "{{command_cmd_remove_ruleset}} {{item.item.name}}"
  check_mode: 'no'
  loop: "{{register_list_enabled_rulesets.results}}"
  notify:
    - update suricata
    - reload service suricata
  when: (item.rc == 0) and (item.item.state|default('true') is match('false|no|remove|disable'))
  tags:
    - suricata
