{{ansible_managed|comment(decoration='#')}}

# $OpenBSD: unbound.conf,v 1.20 2020/06/21 16:59:45 sthen Exp $

# SERVER

server:
        # INTERFACE

{% if not (unbound_interface == []) %}
{% for item in unbound_interface %}
{% if not ((item.comment|default('')) == '') %}
        # {{item.comment}}
{% endif %}
        interface: {{item.address}}{% if not ((item.port|default('53')) == '') %}@{{(item.port|int(53))}}{% endif %}

{% endfor %}
{% else %}
        interface: 127.0.0.1
        interface: ::1
{% endif %}

	# override the default "any" address to send queries; if multiple
	# addresses are available, they are used randomly to counter spoofing
	#outgoing-interface: 192.0.2.1
	#outgoing-interface: 2001:db8::53

        # PORT

{% if not (unbound_default_port == '') %}
        port: {{(unbound_default_port|int(53))}}
{% endif %}

        # INTERNET-PROTOCOL

{% if (unbound_ip4_state is match('false|no|disable')) %}
        do-ip4: no
{% else %}
        do-ip4: yes
{% endif %}
{% if (unbound_ip6_state is match('true|yes|enable')) %}
        do-ip6: yes
{% else %}
        do-ip6: no
{% endif %}

{% if (unbound_prefer_ip6 is match('true|yes|enable')) %}
        prefer-ip6: yes
{% else %}
        prefer-ip6: no
{% endif %}

        # TCP / UDP

{% if (unbound_tcp_state is match('false|no|disable')) %}
        do-tcp: no
{% else %}
        do-tcp: yes
{% endif %}
{% if (unbound_udp_state is match('false|no|disable')) %}
        do-udp: no
{% else %}
        do-udp: yes
{% endif %}

        # IDENTITY

{% if (unbound_hide_identity is match('false|no|disable')) %}
        hide-identity: no
{% else %}
        hide-identity: yes
{% endif %}

{% if not (unbound_identity == '') %}
        identity: "{{unbound_identity}}"
{% endif %}

        # VERSION

{% if (unbound_hide_version is match('false|no|disable')) %}
        hide-version: no
{% else %}
        hide-version: yes
{% endif %}

{% if not (unbound_version == '') %}
        version: "{{unbound_version}}"
{% endif %}

        # TRUSTANCHOR

{% if (unbound_hide_trustanchor is match('false|no|disable')) %}
        hide-trustanchor: no
{% else %}
        hide-trustanchor: yes
{% endif %}

        # HARDENING

{% if (unbound_harden_algo_downgrade is match('true|yes|enable')) %}
        harden-algo-downgrade: yes
{% else %}
        harden-algo-downgrade: no
{% endif %}

{% if (unbound_harden_below_nxdomain is match('true|yes|enable')) %}
        harden-below-nxdomain: yes
{% else %}
        harden-below-nxdomain: no
{% endif %}

{% if (unbound_harden_dnssec_stripped is match('false|no|disable')) %}
        harden-dnssec-stripped: no
{% else %}
        harden-dnssec-stripped: yes
{% endif %}

{% if (unbound_harden_glue is match('false|no|disable')) %}
        harden-glue: no
{% else %}
        harden-glue: yes
{% endif %}

{% if (unbound_harden_large_queries is match('true|yes|enable')) %}
        harden-large-queries: yes
{% else %}
        harden-large-queries: no
{% endif %}

{% if (unbound_harden_referral_path is match('true|yes|enable')) %}
        harden-referral-path: yes
{% else %}
        harden-referral-path: no
{% endif %}

{% if (unbound_harden_short_bufsize is match('true|yes|enable')) %}
        harden-short-bufsize: yes
{% else %}
        harden-short-bufsize: no
{% endif %}


{% if (unbound_do_not_query_localhost is match('false|no|disable')) %}
        do-not-query-localhost: no
{% else %}
        do-not-query-localhost: yes
{% endif %}

        # ACCESS-CONTROL

{% for item in unbound_access_control %}
{% if not ((item.comment|default('')) == '') %}
        # {{item.comment}}
{% endif %}
        access-control:
{%- if not ((item.address|default('')) == '') %} {{item.address}} {% endif %}
{%- if (item.action is match('allow|accept')) %}allow{% else %}refuse{% endif %}


{% endfor %}


	# Perform DNSSEC validation.
	#
	auto-trust-anchor-file: "/var/unbound/db/root.key"
	val-log-level: 2

	# Synthesize NXDOMAINs from DNSSEC NSEC chains.
	# https://tools.ietf.org/html/rfc8198
	#
	aggressive-nsec: yes

        # LOCAL-ZONE

	# Serve zones authoritatively from Unbound to resolver clients.
	# Not for external service.
	#
{% for item in unbound_local_zone %}
{% if not ((item.comment|default('')) == '') %}
        # {{item.comment}}
{% endif %}
        local-zone:
{%- if not ((item.zone|default('')) == '') %} "{{item.zone}}" {% endif %}
{%- if not ((item.type|default('')) == '') %}{{item.type}}{% endif %}

{% endfor %}

        # LOCAL-DATA

{% for item in unbound_local_data %}
{% if not ((item.comment|default('')) == '') %}
        # {{item.comment}}
{% endif %}
        local-data: {% if not ((item.record|default('')) == '') %}"{{item.record}}"{% endif %}

{% endfor %}

        # LOCAL-DATA-PTR

{% for item in unbound_local_data_ptr %}
{% if not ((item.comment|default('')) == '') %}
        # {{item.comment}}
{% endif %}
        local-data-ptr: {% if not ((item.record|default('')) == '') %}"{{item.record}}"{% endif %}

{% endfor %}

	# UDP EDNS reassembly buffer advertised to peers. Default 4096.
	# May need lowering on broken networks with fragmentation/MTU issues,
	# particularly if validating DNSSEC.
	#
	#edns-buffer-size: 1480

	# Use TCP for "forward-zone" requests. Useful if you are making
	# DNS requests over an SSH port forwarding.
	#
	#tcp-upstream: yes

	# CA Certificates used for forward-tls-upstream (RFC7858) hostname
	# verification.  Since it's outside the chroot it is only loaded at
	# startup and thus cannot be changed via a reload.
	#tls-cert-bundle: "/etc/ssl/cert.pem"

	# file to read root hints from.
	# get one from https://www.internic.net/domain/named.cache
	root-hints: "{{file_dst_root_hints}}"

# INCLUDE

{% for item in unbound_include %}
{% if not ((item.comment|default('')) == '') %}
# {{item.comment}}
{% endif %}
include: {{item.file}}

{% endfor %}

# REMOTE CONTROL

remote-control:
{% if (unbound_control_enable is match('true|yes|enable')) %}
        control-enable: yes
{% else %}
        control-enable: no
{% endif %}
	control-interface: /var/run/unbound.sock

# STUB-ZONE

{% if not ((unbound_stub_zone|default([])) == []) %}
{% for item in unbound_stub_zone %}
{% if not ((item.comment|default('')) == '') %}
        # {{item.comment}}
{% endif %}
stub-zone:
        name: "{{item.name}}"
        stub-addr: {{item.address}}{% if not ((item.port|default('53')) == '') %}@{{(item.port|int(53))}}{% endif %}

{% endfor %}
{% endif %}

# FORWARD-ZONE

# Use an upstream forwarder (recursive resolver) for some or all zones.
#
#forward-zone:
#	name: "."				# use for ALL queries
#	forward-addr: 192.0.2.53		# example address only
#	forward-first: yes			# try direct if forwarder fails

# Use an upstream DNS-over-TLS forwarder and do not fall back to cleartext
# if that fails.
#forward-zone:
#	name: "."
#	forward-tls-upstream: yes		# use DNS-over-TLS forwarder
#	forward-first: no			# do NOT send direct
#	# the hostname after "#" is not a comment, it is used for TLS checks:
#	forward-addr: 192.0.2.53@853#resolver.hostname.example
