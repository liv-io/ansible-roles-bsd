---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - nsd

- name: status nsd
  command: "{{command_cmd_status_nsd}}"
  register: register_status_nsd
  changed_when: (register_status_nsd.rc > 1)
  failed_when: (register_status_nsd.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - nsd

- name: disable nsd
  command: "{{command_cmd_disable_nsd}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_status_nsd.rc == 0)
  tags:
    - nsd

- name: check nsd
  command: "{{command_cmd_check_nsd}}"
  register: register_check_nsd
  changed_when: (register_check_nsd.rc > 1)
  failed_when: (register_check_nsd.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - nsd

- name: stop nsd
  command: "{{command_cmd_stop_nsd}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_check_nsd.rc == 0)
  tags:
    - nsd

- name: remove package nsd
  package:
    state: 'absent'
    name: "{{package_name_nsd}}"
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - nsd

- name: remove file nsd.cfg
  file:
    state: 'absent'
    path: "{{file_dst_nsd_cfg}}"
  notify: reload service monit
  tags:
    - nsd

- name: line remove nsd_enable
  lineinfile:
    state: 'absent'
    line: "{{file_line_nsd_enable}}=\"NO\" # Ansible: Remove nsd"
    regexp: "^{{file_line_nsd_enable}}="
    dest: "{{file_dst_nsd_enable}}"
    create: 'yes'
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - nsd

- name: remove file nsd.conf
  file:
    state: 'absent'
    path: "{{file_dst_nsd_conf}}"
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - nsd
