INFORMATION

Name   : user
Type   : Ansible role

Authors: liv community
License: Simplified BSD License

DESCRIPTION

Create, update and delete user accounts and manage the user's 'authorized keys'.

For more information on the usage and available configuration options,
consult the following sections.

USAGE

INSTALL
  - hosts: all
    roles:
      - role: user
    vars:
      user_state: 'install'

INACTIVE
  - hosts: all
    roles:
      - role: user
    vars:
      user_state: 'inactive'

CONFIG
  vars:
    user_config_all:
      - name: 'user01'
        state: 'true'
        comment: 'Example User 01'
        uid: '1001'
        groups: ['group01', 'group02']
        groups_append: 'true'
        password: '$6$qnvq4oxb$F5E0WGpSCSGLYbbgOaqcz/uNagqAWRy8eDEsH1HzQ8Mq5tkfbHrXKhyt9f8XiJpancQw8AOGLnA0ITynFIOrV1'
        password_update: 'true'
        shell: '/bin/bash'
        authorized_key:
          - state: 'true'
            key: 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAqAJMzq+BmNh+rkQiV64pKahfS2JQKYCruyoEmUMRJ7iLNmYs1xYuAcDwinxV6G39X6DMPLyPrV/e6ZECQKdcgg/8+GJ2CPWTCGC/6eyOdq1/iLgAuovMv32/t4sIZbNfKWAgVSkrcLHln6Scdh7hGHEk85o4eubzArWZRwRjvDtyiozl1LUDWnoJo8YZAb8ABg/NMyEcprVLNtZ3ZlgNk8SHiih5dARvPAPZXNKax3SCQx9S0ZSHRGmjlLVclTxC1kDn0vaPRqnFN6opEnd9F15Dmb+VHc1pvKVEFa1ukMOTzeNvQZrhhRjVuaWpiJrjAIGTk6wsGxoHathPEf2X4w== user01'
          - state: 'true'
            key: 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAylF0+CUcLIiVcZNG3psSLzu5f4qS1yjMEPJhCiI9TCD7Vc3j+Z+o5J5SO7jt5FKzhx7vVndVMtASmTQppZ5L7d+qCNDO3rFwcM/VKKO7I8gU24tO4WKGK/3f8ACIxrfNHRslNJLjt6TFYc20ZU+60JF7objO/uN7Dh3BOhUKO8ZK8M9Tk5EnYQqm1jicfix/kozcHqzIKEM7+m3Uxq3t1sA6yRo3/R6RzTydWmvzX85852i0MBNTYM6SCy727aEJNZDPr3/rFCVd5Ai2j+z3vMjbkczNyNeifd8kCojdeDjkYEv4VQ3fG/0EsBXsXyVdzRHCAt31Yh77OlPWIR/2MQ== user01'

    user_config_group:
      - name: 'user02'
        state: 'true'
        comment: 'Example User 02'
        uid: '1002'
        groups: ['group02']
        groups_append: 'true'
        password: '$6$Zmgm4Yd2$d3L6CMZLZk6BFrRelx0YEHeXqmrQqAOVaPhElTq.lqH14MhFS6w6Tupp8LJ1fjvvlicnZ4/Ok9VnC.Pvs0hsQ0'
        password_update: 'true'
        shell: '/bin/bash'
        authorized_key: []

    user_config_host:
      - name: 'user03'
        state: 'false'
        uid: '1003'
        home_remove: 'true'
        home_force: 'true'
        authorized_key: []

PARAMETERS

CONFIG (user)
  state
    Description: Control the state of the user.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'true'
    Options    :
      Install: 'true' | 'yes' | 'install'
      Remove : 'false' | 'no' | 'remove'

  name
    Description: Define the name of the user.
    Implemented: 0.1.0
    Required   : True
    Value      : Arbitrary
    Type       : String
    Default    : ''
    Options    :
      Examples: 'user01' | 'user02' | 'user03'

  comment
    Description: Define a comment for the user.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : String
    Default    : "{{user.name}}"
    Options    :
      Examples: 'Example User' | 'Test User' | 'Service User'

  uid
    Description: Set the UID of the user.
    Implemented: 0.1.0
    Required   : True
    Value      : Arbitrary
    Type       : String
    Default    : ''
    Options    :
      Examples: '1001' | '1002' | '1003'

  group
    Description: Define the primary group of the user.
                 Ensure the group exists before specifing
    Implemented: 0.2.0
    Required   : False
    Value      : Arbitrary
    Type       : String
    Default    : 'nobody'
    Options    :
      Examples: 'group01' | 'group02' | 'group03'

  groups
    Description: Define the groups of the user.
    Implemented: 0.2.0
    Required   : False
    Value      : Arbitrary
    Type       : Array
    Default    : ['nobody']
    Options    :
      Examples: ['group01'] |
                ['group01', 'group02'] |
                ['group01', 'group02', 'group03']

  groups_append
    Description: Control whether to append or overwrite the group membership.
    Implemented: 0.2.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'false'
    Options    :
      Enable : 'true' | 'yes' | 'enable'
      Disable: 'false' | 'no' | 'disable'

  home
    Description: Define the home of the user.
    Implemented: 0.6.0
    Required   : False
    Value      : Arbitrary
    Type       : String
    Default    : "/home/{{user.name}}"
    Options    :
      Examples: '/home/user01' | '/opt/user02' | '/user03'

  home_create
    Description: Control whether to create the home directory.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'false'
    Options    :
      Enable : 'true' | 'yes' | 'enable'
      Disable: 'false' | 'no' | 'disable'

  home_move
    Description: Control whether to move the home directory.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'false'
    Options    :
      Enable : 'true' | 'yes' | 'enable'
      Disable: 'false' | 'no' | 'disable'

  home_remove
    Description: Control whether to remove the home directory when removing the
                 user.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'false'
    Options    :
      Enable : 'true' | 'yes' | 'enable'
      Disable: 'false' | 'no' | 'disable'

  home_force
    Description: Control whether to force the removal of the home directory when
                 removing the user.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'false'
    Options    :
      Enable : 'true' | 'yes' | 'enable'
      Disable: 'false' | 'no' | 'disable'

  password
    Description: Define the password for the user.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary cryptographic hash
    Type       : String
    Default    : '!'
    Options    :
      Examples: '$6$qnvq4oxb$F5E0WGpSCSGLYbbgOaqcz/uNagqAWRy8eDEsH1HzQ8Mq5tkfbHrXKhyt9f8XiJpancQw8AOGLnA0ITynFIOrV1' |
                '$6$Dgjf366H$mpoaFpK8rIaGSpaxhpJIu5AvinfCOLK2WQhnfm3UTwLNBfyCU494fXEYPsrUobsQ7hCcbv8GqwiJjmuhoGqL00' |
                '$6$Zmgm4Yd2$d3L6CMZLZk6BFrRelx0YEHeXqmrQqAOVaPhElTq.lqH14MhFS6w6Tupp8LJ1fjvvlicnZ4/Ok9VnC.Pvs0hsQ0'

  password_update
    Description: Control whether to initially set or continuously update the
                 password.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'true'
    Options    :
      Enable : 'true' | 'yes' | 'enable'
      Disable: 'false' | 'no' | 'disable'

  system
    Description: Control whether to create a system user.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'false'
    Options    :
      Enable : 'true' | 'yes' | 'enable'
      Disable: 'false' | 'no' | 'disable'

CONFIG (authorized_key)
  state
    Description: Control the state of the authorized_key.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'true'
    Options    :
      Install: 'true' | 'yes' | 'install'
      Remove : 'false' | 'no' | 'remove'

  user
    Description: Define the user of the authorized_key.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : "{{user.name}}"
    Options    :
      Examples: 'user01' | 'user02' | 'user03'

  key
    Description: Define the authorized_key of the user.
    Implemented: 0.1.0
    Required   : True
    Value      : Arbitrary
    Type       : String
    Default    : ''
    Options    :
      Examples: 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA5Qg4nV3Jh9kqnCs3YAoVbTCN5DV3vrOPzf1eLp514TE+QC2IDNEV6c8hWUD5VZZF0FS7MfGhsYx3pcd+7OiSvkRtIomNG+GuDJWhD5nCRuvYotrEUGh/P+mm7eLmQUBmZuMBvwUZn9W92zqic8F+uCrOMOqNcxsVp6oHUZSfZUkEoRnJxdBfd4UsLxinwM1fLCm0qYNAAHRjIycXEkAp37gx+6k6qulvf8c3oS/+akZ3xV0hAu7Ce5K1e7dC5iLS0GahMfr16grx+qqK4BHhsN4i7Xg2f1/eMyxsubzH3OkPrzAhoUJbhLUnaaURGhIrMB+JYN0Jo0XMvIavgqcYcQ== user01'
      None    : ''

  key_options
    Description: Define the options for the authorized_key.
    Implemented: 0.1.0
    Required   : False
    Value      : Arbitrary
    Type       : String
    Default    : ''
    Options    :
      Examples: 'command="command"' | 'no-agent-forwarding' | 'no-port-forwarding'
      None    : ''

ROLE
  user_state
    Description: Control the state of the role.
    Implemented: 0.1.0
    Required   : False
    Value      : Predetermined
    Type       : String
    Default    : 'install'
    Options    :
      Install : 'true' | 'yes' | 'install'
      Inactive: 'quiesce' | 'inactive'

  user_config_all
    Description: Define the 'user_config_all' option.
    Implemented: 3.0.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'user01', state: 'true', comment: 'Example User 01', uid: '1001', groups: {'group01'},
                 groups_append: 'true', password: '$6$qnvq4oxb$F5E0WGpSCSGLYbbgOaqcz/uNagqAWRy8eDEsH1HzQ8Mq5tkfbHrXKhyt9f8XiJpancQw8AOGLnA0ITynFIOrV1',
                 password_update: 'true', shell: '/bin/bash', authorized_key: {}}]
      None    : []

  user_config_group
    Description: Define the 'user_config_group' option.
    Implemented: 3.0.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'user01', state: 'true', comment: 'Example User 01', uid: '1001', groups: {'group01'},
                 groups_append: 'true', password: '$6$qnvq4oxb$F5E0WGpSCSGLYbbgOaqcz/uNagqAWRy8eDEsH1HzQ8Mq5tkfbHrXKhyt9f8XiJpancQw8AOGLnA0ITynFIOrV1',
                 password_update: 'true', shell: '/bin/bash', authorized_key: {}}]
      None    : []

  user_config_host
    Description: Define the 'user_config_host' option.
    Implemented: 3.0.0
    Required   : False
    Value      : Arbitrary
    Type       : Array/Hash
    Default    : []
    Options    :
      Examples: [{name: 'user01', state: 'true', comment: 'Example User 01', uid: '1001', groups: {'group01'},
                 groups_append: 'true', password: '$6$qnvq4oxb$F5E0WGpSCSGLYbbgOaqcz/uNagqAWRy8eDEsH1HzQ8Mq5tkfbHrXKhyt9f8XiJpancQw8AOGLnA0ITynFIOrV1',
                 password_update: 'true', shell: '/bin/bash', authorized_key: {}}]
      None    : []

CONFLICTS

ROLES

DEPENDENCIES

PACKAGES

ROLES
  group

  passwd

  shadow

PARAMETERS

REQUIREMENTS

CONTROL NODE
  Ansible
    Version: >= 2.8.0

MANAGED NODE
  Python
    Version: >= 2.7.0

SUPPORT

OPERATING SYSTEMS
  FreeBSD
    Version: 12.2-*
      Status: Stable

  OpenBSD
    Version: 7.1
      Status: Stable
