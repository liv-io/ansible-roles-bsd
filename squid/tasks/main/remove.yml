---

- name: 'include variables'
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - squid

- name: 'command status squid'
  command: "{{command_cmd_status_squid}}"
  register: register_status_squid
  changed_when: (register_status_squid.rc > 1)
  failed_when: (register_status_squid.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - squid

- name: 'command disable squid'
  command: "{{command_cmd_disable_squid}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_status_squid.rc == 0)
  tags:
    - squid

- name: 'command check squid'
  command: "{{command_cmd_check_squid}}"
  register: register_check_squid
  changed_when: (register_check_squid.rc > 1)
  failed_when: (register_check_squid.rc > 1)
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD')
  tags:
    - squid

- name: 'command stop squid'
  command: "{{command_cmd_stop_squid}}"
  check_mode: 'no'
  when: (ansible_os_family == 'OpenBSD') and (register_check_squid.rc == 0)
  tags:
    - squid

- name: 'package remove squid'
  package:
    state: 'absent'
    name: "{{package_name_squid}}"
  tags:
    - squid

- name: 'file remove squid.cfg'
  file:
    state: 'absent'
    path: "{{file_dst_squid_cfg}}"
  notify: 'service reload monit'
  tags:
    - squid

- name: 'line remove squid_enable'
  lineinfile:
    state: 'absent'
    line: "{{file_line_squid_enable}}=\"NO\" # Ansible: Remove squid"
    regexp: "^{{file_line_squid_enable}}="
    dest: "{{file_dst_squid_enable}}"
    create: 'yes'
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - squid

- name: 'file remove squid.conf'
  file:
    state: 'absent'
    path: "{{file_dst_squid_conf}}"
  tags:
    - squid

- name: 'file remove acl.dir'
  file:
    state: 'absent'
    path: "{{file_dst_acl_dir}}"
  tags:
    - squid
