{{ansible_managed|comment(decoration='#')}}

#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $
#	$FreeBSD: releng/12.2/crypto/openssh/sshd_config 360313 2020-04-25 15:38:48Z emaste $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# Note that some of FreeBSD's defaults differ from OpenBSD's, and
# FreeBSD has a few additional options.

# PORT

{% if not (openssh_port == []) %}
{% for item in openssh_port %}
Port {{(item|int(22))}}
{% endfor %}
{% else %}
Port 22
{% endif %}

# ADDRESS FAMILY

{% if (openssh_address_family is match('any|all')) %}
AddressFamily any
{% elif (openssh_address_family is match('inet|ipv4')) %}
AddressFamily inet
{% elif (openssh_address_family is match('inet6|ipv6')) %}
AddressFamily inet6
{% else %}
#AddressFamily any
{% endif %}

# LISTEN ADDRESS

{% if not (openssh_listen_address == []) %}
{% for item in openssh_listen_address %}
ListenAddress {{item}}
{% endfor %}
{% else %}
#ListenAddress 0.0.0.0
#ListenAddress ::
{% endif %}

# PROTOCOL

# The default requires explicit activation of protocol 1
Protocol 2

# HOST KEY

{% if not (openssh_host_key == []) %}
{% for item in openssh_host_key %}
HostKey {{item}}
{% endfor %}
{% else %}
HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
{% endif %}

# CIPHERS

{% if not (openssh_ciphers == []) %}
Ciphers {% for item in openssh_ciphers %}{{item}}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
Ciphers aes256-ctr,aes192-ctr
{% endif %}

# HOST KEY ALGORITHMS

{% if not (openssh_host_key_algorithms == []) %}
HostKeyAlgorithms {% for item in openssh_host_key_algorithms %}{{item}}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
HostKeyAlgorithms ssh-ed25519,ssh-rsa
{% endif %}

# KEY EXCHANGE ALGORITHMS

{% if not (openssh_kex_algorithms == []) %}
KexAlgorithms {% for item in openssh_kex_algorithms %}{{item}}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org
{% endif %}

# MESSAGE AUTHENTICATION CODE ALGORITHMS

{% if not (openssh_macs == []) %}
MACs {% for item in openssh_macs %}{{item}}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
MACs hmac-sha2-512,hmac-sha2-256
{% endif %}


# Ciphers and keying
#RekeyLimit default none

# LOGGING

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# AUTHENTICATION

# Authentication:

#LoginGraceTime 2m
{% if (openssh_permit_root_login is match('true|yes|enable')) %}
PermitRootLogin yes
{% else %}
PermitRootLogin no
{% endif %}
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

{% if (openssh_pubkey_authentication is match('false|no|disable')) %}
PubkeyAuthentication no
{% else %}
PubkeyAuthentication yes
{% endif %}

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# Change to yes to enable built-in password authentication.
{% if (openssh_password_authentication is match('false|no|disable')) %}
PasswordAuthentication no
{% else %}
PasswordAuthentication yes
{% endif %}
#PermitEmptyPasswords no

# Change to no to disable PAM authentication
#ChallengeResponseAuthentication yes

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

# Set this to 'no' to disable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
#UsePAM yes

# FORWARDING

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
{% if (openssh_x11_forwarding is match('true|yes|enable')) %}
X11Forwarding yes
{% else %}
X11Forwarding no
{% endif %}
{% if (openssh_x11_forwarding is match('true|yes|enable')) %}
X11DisplayOffset {{(openssh_x11_display_offset|int(10))}}
{% if (openssh_x11_use_localhost is match('true|yes|enable')) %}
X11UseLocalhost yes
{% else %}
X11UseLocalhost no
{% endif %}
{% endif %}

# OTHER

#PermitTTY yes
{% if (openssh_print_motd is match('true|yes|enable')) %}
PrintMotd yes
{% else %}
PrintMotd no
{% endif %}
#PrintLastLog yes
{% if (openssh_tcp_keep_alive is match('false|no|disable')) %}
TCPKeepAlive no
{% else %}
TCPKeepAlive yes
{% endif %}
#PermitUserEnvironment no
{% if (openssh_compression is match('true|yes|enable')) %}
Compression yes
{% elif (openssh_compression is match('false|no|disable')) %}
Compression no
{% else %}
Compression delayed
{% endif %}
#ClientAliveInterval 0
#ClientAliveCountMax 3
{% if (openssh_use_dns is match('true|yes|enable')) %}
UseDNS yes
{% else %}
UseDNS no
{% endif %}
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#UseBlacklist no
VersionAddendum {{openssh_version_addendum}}

# BANNER

# no default banner path
{% if (openssh_banner is match('false|no|disable')) %}
Banner none
{% else %}
Banner {{file_dst_banner}}
{% endif %}

# SUBSYSTEM

# override default of no subsystems
Subsystem	sftp	/usr/libexec/sftp-server

# CONDITIONAL

{% if not (openssh_match == []) %}
{% for item in openssh_match %}
Match {{item.type}} {{item.name}}
{% for key, value in item.config.items() %}
  {{key}} {{value}}
{% endfor %}

{% endfor %}
{% else %}
# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server
{% endif %}

# ACCESS RESTRICTION

# Login is disallowed for user names that match one of the patterns.
{% if not (openssh_deny_users == []) %}
DenyUsers {% for item in openssh_deny_users %}{{item}}{% if not loop.last %} {% endif %}{% endfor %}

{% else %}
#DenyUsers

{% endif %}

# Login is allowed only for user names that match one of the patterns.
{% if not (openssh_allow_users == []) %}
AllowUsers {% for item in openssh_allow_users %}{{item}}{% if not loop.last %} {% endif %}{% endfor %}

{% else %}
#AllowUsers

{% endif %}

# Login is disallowed for users whose primary group or
# supplementary group list matches one of the patterns.
{% if not (openssh_deny_groups == []) %}
DenyGroups {% for item in openssh_deny_groups %}{{item}}{% if not loop.last %} {% endif %}{% endfor %}

{% else %}
#DenyGroups

{% endif %}

# Login is allowed only for users whose primary group or
# supplementary group list matches one of the patterns.
{% if not (openssh_allow_groups == []) %}
AllowGroups {% for item in openssh_allow_groups %}{{item}}{% if not loop.last %} {% endif %}{% endfor %}

{% else %}
#AllowGroups

{% endif %}
