---

- name: 'include variables'
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - freebsd_syslogd

- name: 'line config syslogd_flags'
  lineinfile:
    state: 'present'
    line: "{{file_line_syslogd_flags}}=\"-s -v -v\" # Ansible: Configure syslogd"
    regexp: "^{{file_line_syslogd_flags}}=.*"
    dest: "{{file_dst_syslogd_flags}}"
    create: 'yes'
  notify: 'service reload syslogd'
  tags:
    - freebsd_syslogd

- name: 'file create syslog.conf'
  template:
    src: "{{file_src_syslog_conf}}"
    dest: "{{file_dst_syslog_conf}}"
    mode: "{{file_mode_syslog_conf}}"
    owner: "{{file_owner_syslog_conf}}"
    group: "{{file_group_syslog_conf}}"
  notify: 'service reload syslogd'
  tags:
    - freebsd_syslogd

- name: 'line enable syslogd_enable'
  lineinfile:
    state: 'present'
    line: "{{file_line_syslogd_enable}}=\"YES\" # Ansible: Enable syslogd"
    regexp: "^{{file_line_syslogd_enable}}=.*"
    dest: "{{file_dst_syslogd_enable}}"
    create: 'yes'
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - freebsd_syslogd

- name: 'file create syslogd.cfg'
  template:
    src: "{{file_src_syslogd_cfg}}"
    dest: "{{file_dst_syslogd_cfg}}"
    mode: "{{file_mode_syslogd_cfg}}"
    owner: "{{file_owner_syslogd_cfg}}"
    group: "{{file_group_syslogd_cfg}}"
  notify: 'service reload monit'
  when: (freebsd_syslogd_monitor_monit_state is match('true|yes|enable'))
  tags:
    - freebsd_syslogd

- name: 'service start syslogd'
  service:
    state: 'started'
    enabled: 'yes'
    name: "{{service_name_syslogd}}"
  when: (ansible_os_family == 'FreeBSD')
  tags:
    - freebsd_syslogd
