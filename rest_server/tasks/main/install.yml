---

- name: include variables
  include_vars: "{{lookup('first_found', params)}}"
  vars:
    params:
      files:
        - "vars/{{ansible_os_family}}{{ansible_distribution_release}}.yml"
        - "vars/{{ansible_os_family}}.yml"
        - 'vars/main.yml'
  tags:
    - rest_server

- name: create group rest-server
  group:
    state: 'present'
    name: "{{group_name_rest_server}}"
    system: "{{group_system_rest_server}}"
  tags:
    - rest_server

- name: create user rest-server
  user:
    state: 'present'
    name: "{{user_name_rest_server}}"
    comment: "{{user_comment_rest_server}}"
    group: "{{user_group_rest_server}}"
    append: "{{user_append_rest_server}}"
    home: "{{user_home_rest_server}}"
    createhome: "{{user_home_create_rest_server}}"
    move_home: "{{user_home_move_rest_server}}"
    remove: "{{user_home_remove_rest_server}}"
    force: "{{user_home_force_rest_server}}"
    password: "{{user_password_rest_server}}"
    update_password: "{{user_password_update_rest_server}}"
    shell: "{{user_shell_rest_server}}"
    system: "{{user_system_rest_server}}"
  tags:
    - rest_server

- name: create file src.dir
  file:
    state: 'directory'
    path: "{{file_dst_src_dir}}"
    mode: "{{file_mode_src_dir}}"
    owner: "{{file_owner_src_dir}}"
    group: "{{file_group_src_dir}}"
  tags:
    - rest_server

- name: create file data.dir
  file:
    state: 'directory'
    path: "{{file_dst_data_dir}}"
    mode: "{{file_mode_data_dir}}"
    owner: "{{file_owner_data_dir}}"
    group: "{{file_group_data_dir}}"
  tags:
    - rest_server

- name: create file rest-server_data.dir
  file:
    state: 'directory'
    path: "{{file_dst_rest_server_data_dir}}"
    mode: "{{file_mode_rest_server_data_dir}}"
    owner: "{{file_owner_rest_server_data_dir}}"
    group: "{{file_group_rest_server_data_dir}}"
  tags:
    - rest_server

- name: download file rest-server.tar.gz
  get_url:
    url: "{{file_src_rest_server_tar_gz}}"
    dest: "{{file_dst_rest_server_tar_gz}}"
    mode: "{{file_mode_rest_server_tar_gz}}"
    owner: "{{file_owner_rest_server_tar_gz}}"
    group: "{{file_group_rest_server_tar_gz}}"
    checksum: "{{file_checksum_rest_server_tar_gz}}"
  tags:
    - rest_server

- name: unarchive file rest-server
  unarchive:
    src: "{{file_src_rest_server}}"
    dest: "{{file_dst_rest_server}}"
    owner: "{{file_owner_rest_server}}"
    group: "{{file_group_rest_server}}"
    exclude: "{{file_exclude_rest_server}}"
    extra_opts: "{{file_extra_opts_rest_server}}"
    remote_src: 'yes'
  tags:
    - rest_server

- name: stat file monit.d
  stat:
    path: "{{file_dst_monit_d}}"
  register: register_monit_d
  when: (rest_server_monitor_monit_state is match('true|yes|enable'))
  tags:
    - rest_server

- name: create file monit.d
  file:
    state: 'directory'
    path: "{{file_dst_monit_d}}"
    mode: "{{file_mode_monit_d}}"
    owner: "{{file_owner_monit_d}}"
    group: "{{file_group_monit_d}}"
  when: (rest_server_monitor_monit_state is match('true|yes|enable')) and (register_monit_d.stat.exists == False)
  tags:
    - rest_server

- name: check service monit
  shell: "{{command_cmd_check_service_monit}}"
  register: register_check_service_monit
  changed_when: (register_check_service_monit.rc > 2)
  failed_when: (register_check_service_monit.rc > 2)
  check_mode: 'no'
  when: (rest_server_monitor_monit_state is match('true|yes|enable'))
  tags:
    - rest_server

- name: flush meta handlers
  meta: 'flush_handlers'
  tags:
    - rest_server
